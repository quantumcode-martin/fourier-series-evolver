[gd_scene load_steps=13 format=2]

[ext_resource path="res://Circle.png" type="Texture" id=1]
[ext_resource path="res://FourierViewer.gd" type="Script" id=4]

[sub_resource type="StyleBoxFlat" id=10]
bg_color = Color( 0.341176, 0.341176, 0.341176, 0.0431373 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.172549, 0.172549, 0.172549, 1 )
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3

[sub_resource type="StyleBoxFlat" id=11]
bg_color = Color( 0.513726, 0.513726, 0.513726, 0.0784314 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.172549, 0.172549, 0.172549, 1 )
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3

[sub_resource type="StyleBoxFlat" id=12]
bg_color = Color( 0.137255, 0.27451, 0.137255, 0.145098 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.172549, 0.172549, 0.172549, 1 )
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3

[sub_resource type="StyleBoxFlat" id=9]
bg_color = Color( 0.6, 0.6, 0.6, 0 )
border_width_left = 1
border_width_top = 1
border_width_right = 1
border_width_bottom = 1
border_color = Color( 0.12549, 0.12549, 0.12549, 1 )
corner_radius_top_left = 3
corner_radius_top_right = 3
corner_radius_bottom_right = 3
corner_radius_bottom_left = 3

[sub_resource type="Environment" id=6]

[sub_resource type="World" id=7]
environment = SubResource( 6 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform int strength: hint_range(1, 10) = 1;

const float PI = 3.14159265358979323846;
const float STD = 1.5;


float gauss(int x, int y){
	return exp(-float(x * x + y * y) / (2. * STD * STD)) / (2. * PI * STD * STD);
}


void fragment() {
	int x = int(UV.x / TEXTURE_PIXEL_SIZE.x);
	int y = int(UV.y / TEXTURE_PIXEL_SIZE.y);
	int i_min = max(x - strength, 0);
	int i_max = min(x + strength + 1, int(1./TEXTURE_PIXEL_SIZE.x));
	int i_diff = i_max - i_min;
	int j_min = max(y - strength, 0);
	int j_max = min(y + strength + 1, int(1./TEXTURE_PIXEL_SIZE.y));
	int j_diff = j_max - j_min;
	// Should be equal to (strength * 2 + 1)^2
	vec4 weights[9];
	vec4 total = vec4(0., 0., 0., 0.);
	for(int i = i_min; i < i_max; i++){
		for(int j = j_min; j < j_max; j++){
			vec4 weight = vec4(
				gauss(i-x, y-j),
				gauss(i-x, y-j),
				gauss(i-x, y-j),
				gauss(i-x, y-j)
			);
			weights[j-j_min + (i-i_min) * (j_max-j_min)] = weight;
			total += weight;
		}
	}
	vec4 color_total = vec4(0., 0., 0., 0.);
	for(int k = 0; k < weights.length(); k++){
		weights[k] /= total;
		weights[k] *= texture(TEXTURE, (UV / TEXTURE_PIXEL_SIZE + vec2(float(k / i_diff), float(k % i_diff))) * TEXTURE_PIXEL_SIZE);
		color_total += weights[k];
	}
	COLOR = color_total;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 8 )
shader_param/strength = 1

[sub_resource type="ViewportTexture" id=2]
flags = 4
viewport_path = NodePath("Pen")

[sub_resource type="ViewportTexture" id=1]
flags = 4
viewport_path = NodePath("Circles")

[node name="FourierViewer" type="CenterContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1420.0
margin_bottom = -580.0
rect_scale = Vector2( 0.5, 0.5 )
script = ExtResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="."]
margin_right = 500.0
margin_bottom = 500.0
rect_min_size = Vector2( 500, 500 )
custom_styles/hover = SubResource( 10 )
custom_styles/pressed = SubResource( 11 )
custom_styles/focus = SubResource( 12 )
custom_styles/normal = SubResource( 9 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Circles" type="Viewport" parent="."]
size = Vector2( 1000, 1000 )
transparent_bg = true
handle_input_locally = false
msaa = 2
fxaa = true
hdr = false
disable_3d = true
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Pen" type="Viewport" parent="."]
size = Vector2( 1000, 1000 )
own_world = true
world = SubResource( 7 )
transparent_bg = true
handle_input_locally = false
msaa = 2
fxaa = true
disable_3d = true
usage = 0
render_target_v_flip = true
render_target_clear_mode = 1
render_target_update_mode = 3

[node name="Pen" type="Sprite" parent="Pen"]
modulate = Color( 0, 20, 20, 1 )
position = Vector2( 1000, 1000 )
texture = ExtResource( 1 )

[node name="LineView" type="TextureRect" parent="."]
material = SubResource( 5 )
margin_right = 500.0
margin_bottom = 500.0
rect_min_size = Vector2( 500, 500 )
mouse_filter = 2
texture = SubResource( 2 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CircleView" type="TextureRect" parent="."]
material = SubResource( 5 )
margin_right = 500.0
margin_bottom = 500.0
rect_min_size = Vector2( 500, 500 )
mouse_filter = 2
texture = SubResource( 1 )
expand = true
stretch_mode = 6
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="pressed" from="Button" to="." method="_on_Button_pressed"]
